apply plugin: "maven-publish"
apply plugin: "signing"
apply plugin: "java-library"

def isRelease(){
    return hasProperty("RELEASE")
}

def isSnapshot(){
    return hasProperty("SNAPSHOT")
}

def getProjectArtifactId(){
    return project.ext.artifactId
}

def getVersion(){
    return version
}

task sourceJar(type: Jar){
    from sourceSets.main.allSource
    archiveClassifier = "sources"
}

task testSourceJar(type: Jar){
	from sourceSets.test.allSource
	archiveClassifier = "testSources"
}

task javadocJar(type: Jar, dependsOn: javadoc){
    from javadoc.destinationDir
    archiveClassifier = "javadoc"
}

afterEvaluate{ project ->
    publishing{
        publications{
            mavenJava(MavenPublication){
		
                groupId = project.group
                version = getVersion()
                artifactId = getProjectArtifactId()
				
                from components.java

                //cusomize pom
                pom{
                    name = "ActionSystem"
                    description = "An Action System for the libgdx framework."
                    url = 'https://bitbucket.org/Vabrant/actionsystem/src/master/'

                    developers{
                        developer{
                            id = "John"
                            name = "Doe John"
                            email = "email@gmail.com"
                        }
                    }

                    licenses{
                        license{
                            name = "My license"
                            url = ""
                        }
                    }

                    scm{
                        url = 'scm:git@bitbucket.org:Vabrant/actionsystem.git'
                        connection ='scm:git@bitbucket.org:Vabrant/actionsystem.git'
                        developerConnection = 'scm:git@bitbucket.org:Vabrant/actionsystem.git'
                    }
                }

                artifacts{
                    artifact sourceJar
                    artifact javadocJar
                }
            }
        }

        repositories{
            maven{
                // def releasesRepoUrl = "$buildDir/repos/releases"
                // def snapshotsRepoUrl = "$buildDir/repos/snapshots"
                // url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                url = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
                // mavenLocal()
                // credentials{
                //     username = "john"
                //     password = "123456789"
                // }
            }
        }
    }

    signing{
        required {""}
        sign publishing.publications.mavenJava
        // sign configurations.archives
    }
}
